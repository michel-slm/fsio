var searchIndex={};
searchIndex["fsio"] = {"doc":"fsio","i":[[0,"directory","fsio","directory",null,null],[5,"create","fsio::directory","Creates the directory (and if needed the parent…",null,[[["t"]],[["result",["fsioerror"]],["fsioerror"]]]],[5,"create_parent","","Creates the parent directory (and if needed the parent…",null,[[["t"]],[["result",["fsioerror"]],["fsioerror"]]]],[5,"delete","","Deletes the directory and any child file/directory.",null,[[["t"]],[["result",["fsioerror"]],["fsioerror"]]]],[0,"error","fsio","error",null,null],[3,"FsIOError","fsio::error","Error struct",null,null],[12,"info","","Holds the error information",0,null],[4,"ErrorInfo","","Holds the error information",null,null],[13,"PathAlreadyExists","","Error Info Type",1,null],[13,"NotFile","","Error Info Type",1,null],[13,"IOError","","Error Info Type",1,null],[0,"file","fsio","file",null,null],[5,"ensure_exists","fsio::file","Ensures the provided path leads to an existing file. If…",null,[[["t"]],[["result",["fsioerror"]],["fsioerror"]]]],[5,"write_text_file","","Creates and writes the text to the requested file path. If…",null,[[["t"],["str"]],[["result",["fsioerror"]],["fsioerror"]]]],[5,"append_text_file","","Appends (or creates) and writes the text to the requested…",null,[[["t"],["str"]],[["result",["fsioerror"]],["fsioerror"]]]],[5,"write_file","","Creates and writes the raw data to the requested file…",null,[[["t"]],[["result",["fsioerror"]],["fsioerror"]]]],[5,"append_file","","Appends (or creates) and writes the raw data to the…",null,[[["t"]],[["result",["fsioerror"]],["fsioerror"]]]],[5,"modify_file","","Overwrites or appends the requested file and triggers the…",null,[[["t"],["fn"],["bool"]],[["result",["fsioerror"]],["fsioerror"]]]],[5,"read_text_file","","Reads the requested text file and returns its content.",null,[[["t"]],[["result",["string","fsioerror"]],["string"],["fsioerror"]]]],[5,"read_file","","Reads the requested file and returns its content.",null,[[["t"]],[["result",["vec","fsioerror"]],["vec",["u8"]],["fsioerror"]]]],[5,"delete","","Deletes the requested file. If the file does not exist,…",null,[[["t"]],[["result",["fsioerror"]],["fsioerror"]]]],[5,"delete_ignore_error","","Deletes the requested file. If the file does not exist,…",null,[[["t"]],["bool"]]],[0,"path","fsio","path",null,null],[5,"canonicalize_as_string","fsio::path","Returns a canonicalized string from the provided path value.",null,[[["t"]],[["result",["string","fsioerror"]],["string"],["fsioerror"]]]],[5,"canonicalize_or","","Returns a canonicalized string from the provided path value.",null,[[["t"],["str"]],["string"]]],[5,"get_basename","","Returns the last path component (file name or last…",null,[[["t"]],[["option",["string"]],["string"]]]],[5,"get_parent_directory","","Returns the parent path.",null,[[["t"]],[["option",["string"]],["string"]]]],[0,"as_path","","as_path",null,null],[8,"AsPath","fsio::path::as_path","Defines as path trait.",null,null],[10,"as_path","","Converts to a path reference.",2,[[["self"]],["path"]]],[0,"from_path","fsio::path","from_path",null,null],[8,"FromPath","fsio::path::from_path","Defines as path trait.",null,null],[10,"from_path","","Converts from a path reference.",3,[[["path"]],["self"]]],[11,"from","fsio::error","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Formats the error using the given formatter.",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]]],"p":[[3,"FsIOError"],[4,"ErrorInfo"],[8,"AsPath"],[8,"FromPath"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);